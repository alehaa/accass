#!/usr/bin/php
<?php

if (!isset($argv[1])) {
	echo "No bill-config set.\n";
	exit(1);
}


/* Read JSON config.
 * This function will either success, or a warning will be printed and PHP will
 * exit immediately. */
$config = json_decode(file_get_contents($argv[1]), true);
if (!isset($config)) {
	printf("Content of '%s' no valid JSON.\n", $argv[1]);
	exit(1);
}

/* Check for required entries in $config. If a required entry is not in $config,
 * an error message will be printed and PHP will exit immediately. */
$required_config = array("template", "invoice", "date", "customer", "items");

$diff = array_diff($required_config, array_keys($config));
if (!empty($diff)) {
	echo "One or more keys are missing in your bill:\n";

	foreach($diff as $key)
		printf(" - %s\n", $key);

	exit(1);
}


/* Search for template directory.
 * A maximum of 10 upper directories will be searched, it does not make sense in
 * a higher range and may cause endless loops otherwise. If no template
 * directory is dound, an error message will be printed and PHP will exit
 * immediately. */
$template_path = "templates";
for ($i = 0; ($i < 10) && !is_dir($template_path); $i++)
	$template_path = "../".$template_path;

if (!is_dir($template_path)) {
	echo "Template path could not be found.\n";
	exit(1);
}

/* Look if template file is present in template directory and include it.
 * If the required template could not be found, an error message will be printed
 * and PHP will exit immediately. */
$template = $template_path."/".$config['template'];
if (!file_exists($template)) {
	printf("Template '%s' could not be found in template dir '%s'.\n",
		$config['template'], $template_path);
	exit(1);
}

include($template);
